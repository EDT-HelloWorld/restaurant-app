(()=>{"use strict";const e={"sundae-soup":{name:"해장국🥣",cookTime:2},"haejang-soup":{name:"순대국🥘",cookTime:1}},t={chef1:{name:"장금이👨‍🍳"},chef2:{name:"백주부👨🏽‍🍳"}},r={server1:{name:"👧🏻",runTime:1},server2:{name:"🤴",runTime:2}},s="대기",n="대기";class a{#e;#t;#r;#s;constructor(e,t){this.#e=e,this.#t=t,this.#r=null,this.#s=s}getId(){return this.#e}getName(){return this.#t}getOrder(){return this.#r}getState(){return this.#s}setOrder(e){this.#r=e}setState(e){this.#s=e}cook(){return new Promise((e=>{setTimeout((()=>{e(this.getOrder())}),1e3*this.getOrder().getFood().getCookTime())}))}}class i{#n;#a;#s;constructor(e,t){this.#n=e,this.#a=t,this.#s="대기중"}getOrderNo(){return this.#n}getFood(){return this.#a}getState(){return this.#s}setState(e){this.#s=e}}class o{#t;#i;constructor(e,t){this.#t=e,this.#i=t}getName(){return this.#t}getCookTime(){return this.#i}}class d{#e;#t;#o;#r;#s;constructor(e,t,r){this.#e=e,this.#t=t,this.#o=r,this.#r=null,this.#s=n}getId(){return this.#e}getName(){return this.#t}getRunTime(){return this.#o}getState(){return this.#s}getOrder(){return this.#r}setOrder(e){this.#r=e}setState(e){this.#s=e}serve(){return new Promise((e=>{this.setState("서빙중"),setTimeout((()=>{const t=this.getOrder();t.setState("완료"),this.setState(n),e(t)}),1e3*this.#o)}))}}class u{#n;#d;#u;#h;#l;#c;#m;constructor(){this.#n=1,this.#d=[],this.#u=[],this.#h=[],this.#l=[],this.#c=[],this.#m=[]}init(){this.#v(),this.#S()}getAvailableChef(){return this.#h.shift()}returnChef(e){e.setState(s),e.setOrder(null),this.setAvailableChefs(e)}isAvailableChef(){return this.#h.length>0}setAvailableChefs(e){this.#h.push(e)}setAvailableServers(e){this.#l.push(e)}isAvailableServer(){return this.#l.length>0}getAvailableServer(){return this.#l.shift()}returnServer(e){this.#l.push(e)}addServeQueue(e){this.#u.push(e)}getNextServe(){return this.#u.shift()}isServeQueueEmpty(){return 0===this.#u.length}addOrder(t){const r=e[t].name,s=e[t].cookTime,n=new o(r,s),a=new i(this.#n++,n);return this.#d.push(a),a}isValidateFood(t){return void 0!==e[t]}isOrderEmpty(){return 0===this.#d.length}getNextOrder(){return this.#d.shift()}#v(){for(let[e,r]of Object.entries(t)){const t=new a(e,r.name);this.#c.push(t)}}#S(){for(let[e,t]of Object.entries(r)){const r=new d(e,t.name,t.runTime);this.#m.push(r)}}getTotalWorkingChefs(){return this.#c}getTotalWorkingServers(){return this.#m}}class h{#g;#f;#T;#O;constructor(){this.#T,this.#O,this.#g,this.#f,this.#p()}#p(){this.#g=document.querySelector("#group-order-buttons"),this.#f=document.querySelector("#order-state"),this.#T=document.querySelector("#chef-state"),this.#O=document.querySelector("#server-state")}setClickOrder(e){this.#g.addEventListener("click",(t=>{const r=t.target;if(r.classList.contains("order-button")){const t=r.dataset.menu;e(t)}}))}renderAddMenuButton(e,t){const r=document.createElement("button");r.classList.add("order-button"),r.innerHTML=t.name,r.dataset.menu=e,this.#g.appendChild(r)}renderAddChef(e,t){const r=document.createElement("li"),n=document.createElement("span"),a=document.createElement("span"),i=document.createElement("span");r.id=e,r.className="chef",n.className="name",a.className="state",i.className="food",n.innerHTML=t,a.innerHTML=s,i.innerHTML=null,r.innerHTML=n.outerHTML+a.outerHTML+i.outerHTML,this.#T.appendChild(r)}renderAddOrder(e){const t=document.createElement("li"),r=document.createElement("span"),s=document.createElement("span"),n=document.createElement("span");t.className="order",t.id=`order${e.getOrderNo()}`,r.className="order-number",s.className="order-name",n.className="order-state",r.innerHTML=`주문${e.getOrderNo()}`,s.innerHTML=e.getFood().getName(),n.innerHTML=e.getState(),t.innerHTML=r.outerHTML+s.outerHTML+n.outerHTML,this.#f.appendChild(t)}renderAddServer(e){const t=document.createElement("li"),r=document.createElement("span"),s=document.createElement("span"),n=document.createElement("span"),a=document.createElement("span");t.className="serve",t.id=`serve${e.getOrderNo()}`,r.className="serve-number",s.className="serve-name",n.className="serve-state",a.className="serve-server",r.innerHTML=`주문${e.getOrderNo()}`,s.innerHTML=e.getFood().getName(),n.innerHTML=e.getState(),a.innerHTML="",t.innerHTML=r.outerHTML+s.outerHTML+n.outerHTML+a.outerHTML,this.#O.appendChild(t)}renderUpdateServer(e){const t=document.querySelector(`#serve${e.getOrder().getOrderNo()}`),r=t.querySelector(".serve-state"),s=t.querySelector(".serve-server");r.innerHTML=e.getOrder().getState(),s.innerHTML=e.getName()}renderUpdateOrderList(e){document.querySelector(`#order${e.getOrderNo()}`).querySelector(".order-state").innerHTML=e.getState()}renderUpdateChef(e){const t=document.querySelector(`#${e.getId()}`),r=t.querySelector(".state"),s=t.querySelector(".food");r.innerHTML=e.getState(),s.innerHTML=e.getOrder()?.getFood().getName()??""}renderDeleteOrder(e){document.querySelector(`#order${e.getOrderNo()}`).remove()}renderDoneServer(e){const t=document.querySelector(`#serve${e.getOrderNo()}`);t.querySelector(".serve-server").innerHTML="",t.querySelector(".serve-state").innerHTML=e.getState()}}(new class{#C;#b;constructor(){this.#b=new h,this.#C=new u,this.#C.init()}init(){this.#b.setClickOrder(this.handleOrderButtonClick.bind(this)),this.setPrepareOpen()}setPrepareOpen(){this.renderMenuButton(),this.setChefs(),this.setServer()}async startSimulation(){const e=await this.findAvailableChef();let t=await this.getNextOrder();this.onCooking(e,t),t=await e.cook(),this.cooked(e,t);const r=await this.findAvailableServer();t=this.#C.getNextServe(),this.onServe(r,t),await r.serve(),this.served(r,t)}setChefs(){for(let e of this.#C.getTotalWorkingChefs())this.#b.renderAddChef(e.getId(),e.getName()),this.#C.setAvailableChefs(e)}setServer(){for(let e of this.#C.getTotalWorkingServers())this.#C.setAvailableServers(e)}findAvailableServer(){return new Promise((e=>{const t=setInterval((()=>{if(!0===this.#C.isAvailableServer()){clearInterval(t);const r=this.#C.getAvailableServer();e(r)}}),130)}))}findAvailableChef(){return new Promise((e=>{const t=setInterval((()=>{if(!0===this.#C.isAvailableChef()){clearInterval(t);const r=this.#C.getAvailableChef();e(r)}}),500)}))}onCooking(e,t){e.setState("요리중"),t.setState("요리중"),e.setOrder(t),this.renderUpdateOrderList(t),this.renderUpdateChef(e)}cooked(e,t){t.setState("대기중"),this.#C.returnChef(e),this.#b.renderUpdateChef(e),this.#b.renderAddServer(t),this.#b.renderDeleteOrder(t),this.#C.addServeQueue(t)}onServe(e,t){t.setState("서빙중"),e.setOrder(t),e.setState("서빙중"),this.#b.renderUpdateServer(e)}served(e,t){t.setState("완료"),this.#b.renderUpdateServer(e),this.#b.renderDoneServer(t),this.#C.returnServer(e),e.setState(n),e.setOrder(null)}renderUpdateOrderList(e){this.#b.renderUpdateOrderList(e)}renderUpdateChef(e){this.#b.renderUpdateChef(e)}handleOrderButtonClick(e){if(0==this.#C.isValidateFood(e))return;const t=this.#C.addOrder(e);this.#b.renderAddOrder(t),this.startSimulation()}renderMenuButton(){for(let[t,r]of Object.entries(e))this.#b.renderAddMenuButton(t,r)}getNextOrder(){return new Promise((e=>{const t=this.#C.getNextOrder();t&&e(t)}))}}).init()})();